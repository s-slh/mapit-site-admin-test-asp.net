@model IEnumerable<MapitSiteAdmin.Models.Project>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using MapitSiteAdmin.Constants.Users

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Create)).Result.Succeeded)
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
@if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.View)).Result.Succeeded)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Created)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Updated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MapitUser)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Updated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MapitUser.UserName)
                    </td>
                    <td>
                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Edit)).Result.Succeeded)
                        {
                            <a asp-action="Edit" asp-route-id="@item.ProjectId">Edit</a>
                        }
                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.View)).Result.Succeeded)
                        {
                            <a asp-action="Details" asp-route-id="@item.ProjectId">Details</a>
                        }
                        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Delete)).Result.Succeeded)
                        {
                            <a asp-action="Delete" asp-route-id="@item.ProjectId">Delete</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<h1>Product Management</h1>
<br />
@if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Create)).Result.Succeeded)
{
    <button class="btn btn-success">Create</button>
}
@if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.View)).Result.Succeeded)
{
    <button class="btn btn-info">View</button>
}
@if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Edit)).Result.Succeeded)
{
    <button class="btn btn-warning">Modify</button>
}
@if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Delete)).Result.Succeeded)
{
    <button class="btn btn-danger">Delete</button>
}
